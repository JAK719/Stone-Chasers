@model Sailing_Rocks.Models.RockLocationVM

@{
    ViewData["Title"] = "Details";

<style>
    #map{
        height: 600px;
        width: 100%;
    }
</style>
}

<h1>Rock Details</h1>

<div alt="Content Photo">
    <h4>@Model.Rock.Name</h4>
    <hr />
    <div class="rockDetails">
        <img src="@Model.Rock.Image" style="width: auto; height: 315px;" alt="Content Photo">
        <dl class="row">
            @*<dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Rock.Name)
            </dt>*@
            @*<dd class="col-sm-10">
                @Html.DisplayFor(model => model.Rock.Name)
            </dd>*@
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Rock.Description)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Rock.Description)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Rock.CreatedOn)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Rock.CreatedOn)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Rock.Serial)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Rock.Serial)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Rock.User)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Rock.User.Id)
            </dd>
        </dl>
    </div>
    <div>
        <a asp-action="Edit" asp-controller="Rock" asp-route-id="@Model.Rock.Id">Edit Rock</a>
    </div>

    <h2>Friends of @Model.Rock.Name</h2>
    <div class="Images">
        @foreach (var rockFriend in Model.Rock.UserRocks)
        {
            <div class="Content">
                <img src="@rockFriend.User.Image" alt="user profile picture">
                <p>@rockFriend.User.FirstName</p>
                <p>@rockFriend.User.LastName</p>
                <p>@rockFriend.User.UserName</p>

            </div>
        }
    </div>

    @*will display all locations*@
    @*@foreach (var location in Model.Rock.Locations)
        {
            <p>@location.Lat</p>
            <p>@location.Lng</p>

        }*@
    <h2>Places I Have Been</h2>
    <div class="Images">
        @foreach (var location in @Model.Rock.Locations)
        {
            <div class="Content">
                <h4>@location.LocationName</h4>
                <img src="@location.LocationImage" alt="test">
                <p>@location.Comment</p>
            </div>
        }
    </div>
    @if (Model.Rock.Locations.Count == 0)
    {
        <p>No Locations</p>
    }
    else
    {
        <h2>Last Seen Here:</h2>
        <div class="Content">
            <img src="@Model.Rock.Locations.LastOrDefault().LocationImage" />
            <p>@Model.Rock.Locations.LastOrDefault().LocationName</p>
            <p>@Model.Rock.Locations.LastOrDefault().Comment</p>
            <p>@Model.Rock.Locations.LastOrDefault().Lat</p>
            <p>@Model.Rock.Locations.LastOrDefault().Lng</p>
        </div>
    }

</div>
    <h3>Add a New Location</h3>
    <div class="col-md-4">
        <form asp-action="Create" asp-controller="Location">
            <input asp-for="Location.RockId" type="hidden" />
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Location.LocationName" class="control-label"></label>
                <input asp-for="Location.LocationName" class="form-control" />
                <span asp-validation-for="Location.LocationName" class="text-danger"></span>
            </div>


            <div class="form-group">
                <label asp-for="Location.Lat" class="control-label"></label>
                <input type="number" min="-90" max="90" step="0.000000000000001"
                       asp-for="Location.Lat" class="form-control" />
                <span asp-validation-for="Location.Lat" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Location.Lng" class="control-label"></label>
                <input type="number" min="-180" max="180" step="0.000000000000001"
                       asp-for="Location.Lng" class="form-control" />
                <span asp-validation-for="Location.Lng" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Location.LocationImage" class="control-label"></label>
                <input asp-for="Location.LocationImage" class="form-control" />
                <span asp-validation-for="Location.LocationImage" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Location.Comment" class="control-label"></label>
                <input asp-for="Location.Comment" class="form-control" />
                <span asp-validation-for="Location.Comment" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Location.LocatedOn" class="control-label"></label>
                <input asp-for="Location.LocatedOn" class="form-control" />
                <span asp-validation-for="Location.LocatedOn" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Add Location" class="btn btn-primary" />
            </div>
        </form>
    </div>

    <div id="mapContainer"><div class="mapBox" id="map"></div></div>


    

    @section scripts {
        <script>
    const map_url = 'https://maps.googleapis.com/maps/api/js?key=AIzaSyDxEiiPssDguXJXixsSljlWov1JZjpt3fk&callback=initMap&signed_in=true&language=';

    var url = 'https://localhost:44366/Rock/getrocklocation/' + @Model.Rock.Id;

    document.addEventListener('DOMContentLoaded', function (){
    if (document.querySelectorAll('#map').length > 0)
    {
        if (document.querySelector('html').lang)
            lang = document.querySelector('html').lang;
        else
            lang = 'en';

        var js_file = document.createElement('script');
        js_file.type = 'text/javascript';
        js_file.src = `${map_url}` + lang;
        document.getElementsByTagName('head')[0].appendChild(js_file);

    }
    });


    var map;

    function initMap() {
        map = new google.maps.Map(document.getElementById('map'), {
            center: { lat: parseFloat(41.47463327829468), lng: parseFloat(-81.78872226820937) },
            zoom: 10
        });

        fetch(url)
            .then(function (response) { return response.json() })
            .then(plotMarkers);
    }

    var markers;
    var bounds;


    function plotMarkers(m) {
        markers = [];
        bounds = new google.maps.LatLngBounds();

        console.log(m);
        console.log(typeof m);

        var map_json = JSON.parse(m);


        map_json.forEach(function (marker) {
            //console.log(marker.Lat);
            //console.log(marker.Lng);
            var position = new google.maps.LatLng(marker.Lat, marker.Lng);
            var icon = {
                url: '/images/Rock1.png', // url
                scaledSize: new google.maps.Size(150, 150), // scaled size
                origin: new google.maps.Point(0, 0), // origin
                anchor: new google.maps.Point(0, 0) // anchor
            };

            markers.push(
                new google.maps.Marker({
                    position: position,
                    map: map,
                    icon: icon,
                    animation: google.maps.Animation.BOUNCE
                })
            );

            bounds.extend(position);
        });

        map.fitBounds(bounds);

    }


        </script>
    }
